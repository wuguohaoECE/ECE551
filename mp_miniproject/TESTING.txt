TEST FILEFILE DESCRIPTION:
gw79

1.StandardTest.txt
	This test contains example from "numerics.txt"
	run ./Numerics < StandardTest.txt and you will see
	output:
	defined f(x y z)
	f(3 4.2 5) = 14.6 [correct]
	f(-1 9.2 6) = -6.2 [correct]
	This is correct because this is what numerics.txt defined it should like.

2.test1.txt
	run ./Numerics < test1.txt

	NOTICE:
	The First argument for test MUST BE full expression. It means it can not be a constant.
	"test 1 1" is not correct since my program will detect "(" at first.
	But "test (+ 1 1) 2" is OK. It means you can use my built-in function or user-defined function

	Nesting function is available in both "define" and "test". However, each user-defined funciton can only be used ONLY
	ONCE at the same time to "define" and "test". ex: define (g a b) = (+ (f a) (f b))  is not allow!!
	Here, "ONCE" means once in both "define" and "test". ex: define(f x y) = (+ x y) define (g x y) = (+ (f x y) y) test (g (f 1 2) 2) is not allow!!
	because function is used in "define" and "test" one time respectively, totally 2 times.
	Also, a function can not be nested for more than one time. ex: we define f(x), then define (g x) = (f x). then we CANNOT define (h x) = (f x) because it will make (g x) failed.

	I add an command "exit" to help you close the program.

	There are FOUR parts in test1.txt
	The first part is simple and correct expression.
	The second part is simple but grammarly mistaken expression
	    1, Redefine function: My program will tell you and ask you to type again
	    2 Do not use keyword "define" or "test"
	    3 Without "="
	    4 First argument do not use full expression
	    5 without ")"
	    6 lack parameter
	    7 repeted para
	    8 lack para
	The third part is complex and correct expression
	The forth part is to test pound-sign.
	    The second test didnot work but The program will tell you what's wrong.

	When I run this, I got this valgrind output:
	

defined minus(x y)
defined multiply(x y)
defined divide(x y)
defined mode(x y)
defined pow(x y)
defined log(x y)
defined Floor(x)
defined Ceil(x)
defined Round(x)
defined Select(x y z)
plus(2 3) = 5 [correct]
multiply(2 2) = 4 [correct]
divide(4 2) = 2 [correct]
mode(5 2) = 1 [correct]
pow(2 2) = 4 [correct]
log(2 4) = 2 [correct]
Floor(3.4) = 3 [correct]
Ceil(3.4) = 4 [correct]
Round(3.4) = 3 [correct]
Select(1 2 3) = 2 [correct]
Select(-1 2 3) = 3 [correct]
size: 0
plz use keyword: define or test
you have already define function: plus
plz use keyword: define or test
excepted = but find (
Invalid op: 2
excepted ) but find (
lack )
No this parameter y
plz use keyword: define or test
size: 0
plz use keyword: define or test
defined f(a b c d)
defined g(a b c)
f(1 2 3 4) = 12.5 [correct]
g(10.2 8.2 15.5) = 9 [correct]
g(-10.2 8.2 15.5) = 16 [correct]
plz use keyword: define or test
plz use keyword: define or test
size: 0
plz use keyword: define or test
size: 22
f(1 2 3 4) = 12.5 [correct]

size: 12
lack )
exit
==4284==
==4284== HEAP SUMMARY:
==4284==     in use at exit: 0 bytes in 0 blocks
==4284==   total heap usage: 2,050 allocs, 2,050 frees, 210,433 bytes allocated
==4284==
==4284== All heap blocks were freed -- no leaks are possible
==4284==
==4284== For counts of detected and suppressed errors, rerun with: -v
==4284== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



3.test2_3.txt
	run ./Numerics < test2_3.txt

	NOTICE:
	1, This test file is for step 2 and step 3
	
	2, For step 2, you should use command "numint", then the first augument is the name of a user-defined function. The second argument is the step size, the remaining arguments come in pairs, specifying the range of each parameter.
	
	3, Step 3 is similar. The command change to "mcint". And the second argument become the number of trails.
	
	4, I have redefine some function for step2 and step3. So plz RESTART the program.

	5, Numerical integration is slow, so the program will show how much work it has done if number of calculation is more than 100000.

	6, When I run my testcase, I got the following output:


defined f(x)
numerical intergration: 20
Monte Carlo simulation result: 19.9541
numerical intergration: -29.12
Monte Carlo simulation result: -29.2555
numerical intergration: -2.19945e-12
Monte Carlo simulation result: 0.786492
defined g(x)
defined h(x y)
There will be approximately 120000 points to calculate
0% of work have been processed. plz wait
10% of work have been processed. plz wait
20% of work have been processed. plz wait
30% of work have been processed. plz wait
40% of work have been processed. plz wait
50% of work have been processed. plz wait
60% of work have been processed. plz wait
70% of work have been processed. plz wait
80% of work have been processed. plz wait
90% of work have been processed. plz wait
numerical intergration: 112
Monte Carlo simulation result: 111.775
defined abs(x)
defined abs1(x)
defined u(x y)
numerical intergration: 12
Monte Carlo simulation result: 11.9904
plz use keyword: define, test, numint, mcint, max, min
YOU PARAMETERS NUMBER IS NOT MATCH
For each Parameter, you should write lower limit first and upper limit later

	
	This is correct because:
	1, I try different functions.
	2, I try different range of integration
	3, Numerical method and monte carlo result is closed
	



	
4.test4.txt
	run ./Numerics < test4.txt

	NOTICE:
	1,This test file is for step 4.
	
	2,I CHANGE the format of input. The first is command which could be "max" or "min".
	
	3,The first argument is name of the function, second is "gamma", third is "convergedDistance",forth is "maximum number of steps". And last argument is the "starting point", which will have as many as the function has parameters.Importance: I SWAP THE THIRD AND FORTH PARAMETER.

	4,I have redefine some function for step2 and step3. So plz RESTART the program.

When I run my test case. I got this:

defined f(x)
defined g(x)
defined h(x y)
defined H(x)
MIN: Local maximun(minumum) is 2.35768e-05 when (x) = (-0.00485559)
MIN: Local maximun(minumum) is 1.48659e-05 when (x) = (0.00385564)
MIN: Local maximun(minumum) is 2.10778e-05 when (x,y) = (-1.99892,4.99554)
MIN: Local maximun(minumum) is 0.00248993 when (x,y) = (-1.98207,4.95343)
MIN: Local maximun(minumum) is 2.48758e-05 when (x,y) = (-1.99821,4.99535)
defined F(x)
MAX: Local maximun(minumum) is -2.27384e-05 when (x) = (-2.00477)
plz use keyword: define, test, numint, mcint, max, min
defined abs(x)
MIN: Do not converged but current Local maximun(minumum) is 0.1 when (x) = (-0.1)
defined abs1(x)
defined A(x y)

MIN: Local maximun(minumum) is 4.70042e-05 when (x,y) = (0.00685596,0.00685596)

	
	This is correct because:
	1, I test function with different dimension
	2, If it is not converged, I print the corresponding result.
	3, I try different gamma and converged distance.
	4, I try different starting point, both on left side and right side.
	5, I try both max and min

	
