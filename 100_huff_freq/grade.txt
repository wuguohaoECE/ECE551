Grading at 11/12/2019:16:35:10.447421
For commit ID 5fad3bdfac3e31cf7bee23a7f23d65b5e5903582
Grading at Tue Nov 12 11:35:02 EST 2019
compiling
g++ -ggdb3 -Wall -Werror -pedantic -o testFreq testFreq.cpp readFreq.cpp
Make succeed, testFreq created
Testcase 1
-----------------------
  - Valgrind reported errors
Valgrind reported errors (test failed).
==4297== Memcheck, a memory error detector
==4297== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==4297== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==4297== Command: ./testFreq /etc/issue
==4297== Parent PID: 4296
==4297== 
==4297== Invalid read of size 8
==4297==    at 0x10977C: readFrequencies(char const*) (readFreq.cpp:38)
==4297==    by 0x109357: main (testFreq.cpp:10)
==4297==  Address 0x5b80238 is 600 bytes inside an unallocated block of size 4,112,384 in arena "client"
==4297== 
==4297== Invalid write of size 8
==4297==    at 0x109783: readFrequencies(char const*) (readFreq.cpp:38)
==4297==    by 0x109357: main (testFreq.cpp:10)
==4297==  Address 0x5b80238 is 600 bytes inside an unallocated block of size 4,112,384 in arena "client"
==4297== 
==4297== Invalid read of size 8
==4297==    at 0x1093A8: main (testFreq.cpp:13)
==4297==  Address 0x5b7ff98 is 0 bytes after a block of size 8 alloc'd
==4297==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4297==    by 0x1096FC: readFrequencies(char const*) (readFreq.cpp:36)
==4297==    by 0x109357: main (testFreq.cpp:10)
==4297== 
==4297== Invalid read of size 8
==4297==    at 0x1093E9: main (testFreq.cpp:17)
==4297==  Address 0x5b7ffb8 is 24 bytes after a block of size 16 in arena "client"
==4297== 
==4297== Conditional jump or move depends on uninitialised value(s)
==4297==    at 0x1093AE: main (testFreq.cpp:13)
==4297== 
==4297== Use of uninitialised value of size 8
==4297==    at 0x4F4370E: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==4297==    by 0x4F44164: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==4297==    by 0x4F503E4: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==4297==    by 0x1093F6: main (testFreq.cpp:17)
==4297== 
==4297== Conditional jump or move depends on uninitialised value(s)
==4297==    at 0x4F4371B: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==4297==    by 0x4F44164: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==4297==    by 0x4F503E4: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==4297==    by 0x1093F6: main (testFreq.cpp:17)
==4297== 
==4297== Mismatched free() / delete / delete []
==4297==    at 0x4C3173B: operator delete[](void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4297==    by 0x10942A: main (testFreq.cpp:19)
==4297==  Address 0x5b7ff90 is 0 bytes inside a block of size 8 alloc'd
==4297==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4297==    by 0x1096FC: readFrequencies(char const*) (readFreq.cpp:36)
==4297==    by 0x109357: main (testFreq.cpp:10)
==4297== 
==4297== 
==4297== HEAP SUMMARY:
==4297==     in use at exit: 0 bytes in 0 blocks
==4297==   total heap usage: 6 allocs, 6 frees, 85,583 bytes allocated
==4297== 
==4297== All heap blocks were freed -- no leaks are possible
==4297== 
==4297== For counts of detected and suppressed errors, rerun with: -v
==4297== Use --track-origins=yes to see where uninitialised values come from
==4297== ERROR SUMMARY: 346 errors from 8 contexts (suppressed: 0 from 0)
Testcase 2
-----------------------
  - Valgrind reported errors
Valgrind reported errors (test failed).
==4301== Memcheck, a memory error detector
==4301== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==4301== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==4301== Command: ./testFreq /etc/services
==4301== Parent PID: 4300
==4301== 
==4301== Invalid read of size 8
==4301==    at 0x10977C: readFrequencies(char const*) (readFreq.cpp:38)
==4301==    by 0x109357: main (testFreq.cpp:10)
==4301==  Address 0x5b84b88 is 200 bytes inside an unallocated block of size 4,093,216 in arena "client"
==4301== 
==4301== Invalid write of size 8
==4301==    at 0x109783: readFrequencies(char const*) (readFreq.cpp:38)
==4301==    by 0x109357: main (testFreq.cpp:10)
==4301==  Address 0x5b84b88 is 200 bytes inside an unallocated block of size 4,093,216 in arena "client"
==4301== 
==4301== Invalid read of size 8
==4301==    at 0x1093A8: main (testFreq.cpp:13)
==4301==  Address 0x5b84a78 is 0 bytes after a block of size 8 alloc'd
==4301==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4301==    by 0x1096FC: readFrequencies(char const*) (readFreq.cpp:36)
==4301==    by 0x109357: main (testFreq.cpp:10)
==4301== 
==4301== Invalid read of size 8
==4301==    at 0x1093E9: main (testFreq.cpp:17)
==4301==  Address 0x5b84a98 is 24 bytes after a block of size 16 in arena "client"
==4301== 
==4301== Conditional jump or move depends on uninitialised value(s)
==4301==    at 0x1093AE: main (testFreq.cpp:13)
==4301== 
==4301== Use of uninitialised value of size 8
==4301==    at 0x4F4370E: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==4301==    by 0x4F44164: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==4301==    by 0x4F503E4: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==4301==    by 0x1093F6: main (testFreq.cpp:17)
==4301== 
==4301== Conditional jump or move depends on uninitialised value(s)
==4301==    at 0x4F4371B: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==4301==    by 0x4F44164: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==4301==    by 0x4F503E4: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==4301==    by 0x1093F6: main (testFreq.cpp:17)
==4301== 
==4301== Mismatched free() / delete / delete []
==4301==    at 0x4C3173B: operator delete[](void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4301==    by 0x10942A: main (testFreq.cpp:19)
==4301==  Address 0x5b84a70 is 0 bytes inside a block of size 8 alloc'd
==4301==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4301==    by 0x1096FC: readFrequencies(char const*) (readFreq.cpp:36)
==4301==    by 0x109357: main (testFreq.cpp:10)
==4301== 
==4301== 
==4301== HEAP SUMMARY:
==4301==     in use at exit: 0 bytes in 0 blocks
==4301==   total heap usage: 6 allocs, 6 frees, 104,737 bytes allocated
==4301== 
==4301== All heap blocks were freed -- no leaks are possible
==4301== 
==4301== For counts of detected and suppressed errors, rerun with: -v
==4301== Use --track-origins=yes to see where uninitialised values come from
==4301== ERROR SUMMARY: 39009 errors from 8 contexts (suppressed: 0 from 0)
Testcase 3
-----------------------
  - Valgrind reported errors
Valgrind reported errors (test failed).
==4305== Memcheck, a memory error detector
==4305== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==4305== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==4305== Command: ./testFreq /usr/share/dict/words
==4305== Parent PID: 4304
==4305== 
==4305== Invalid read of size 8
==4305==    at 0x10977C: readFrequencies(char const*) (readFreq.cpp:38)
==4305==    by 0x109357: main (testFreq.cpp:10)
==4305==  Address 0x5c6d4b8 is 440 bytes inside an unallocated block of size 3,140,832 in arena "client"
==4305== 
==4305== Invalid write of size 8
==4305==    at 0x109783: readFrequencies(char const*) (readFreq.cpp:38)
==4305==    by 0x109357: main (testFreq.cpp:10)
==4305==  Address 0x5c6d4b8 is 440 bytes inside an unallocated block of size 3,140,832 in arena "client"
==4305== 
==4305== Invalid read of size 8
==4305==    at 0x1093A8: main (testFreq.cpp:13)
==4305==  Address 0x5c6d2b8 is 0 bytes after a block of size 8 alloc'd
==4305==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4305==    by 0x1096FC: readFrequencies(char const*) (readFreq.cpp:36)
==4305==    by 0x109357: main (testFreq.cpp:10)
==4305== 
==4305== Invalid read of size 8
==4305==    at 0x1093E9: main (testFreq.cpp:17)
==4305==  Address 0x5c6d2d8 is 24 bytes after a block of size 16 in arena "client"
==4305== 
==4305== Conditional jump or move depends on uninitialised value(s)
==4305==    at 0x1093AE: main (testFreq.cpp:13)
==4305== 
==4305== Use of uninitialised value of size 8
==4305==    at 0x4F4370E: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==4305==    by 0x4F44164: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==4305==    by 0x4F503E4: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==4305==    by 0x1093F6: main (testFreq.cpp:17)
==4305== 
==4305== Conditional jump or move depends on uninitialised value(s)
==4305==    at 0x4F4371B: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==4305==    by 0x4F44164: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==4305==    by 0x4F503E4: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==4305==    by 0x1093F6: main (testFreq.cpp:17)
==4305== 
==4305== Mismatched free() / delete / delete []
==4305==    at 0x4C3173B: operator delete[](void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4305==    by 0x10942A: main (testFreq.cpp:19)
==4305==  Address 0x5c6d2b0 is 0 bytes inside a block of size 8 alloc'd
==4305==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4305==    by 0x1096FC: readFrequencies(char const*) (readFreq.cpp:36)
==4305==    by 0x109357: main (testFreq.cpp:10)
==4305== 
==4305== 
==4305== HEAP SUMMARY:
==4305==     in use at exit: 0 bytes in 0 blocks
==4305==   total heap usage: 6 allocs, 6 frees, 1,057,132 bytes allocated
==4305== 
==4305== All heap blocks were freed -- no leaks are possible
==4305== 
==4305== For counts of detected and suppressed errors, rerun with: -v
==4305== Use --track-origins=yes to see where uninitialised values come from
==4305== ERROR SUMMARY: 1942740 errors from 8 contexts (suppressed: 0 from 0)
Testcase 4
-----------------------
  - Valgrind reported errors
Valgrind reported errors (test failed).
==4325== Memcheck, a memory error detector
==4325== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==4325== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==4325== Command: ./testFreq /usr/share/dict/cracklib-small
==4325== Parent PID: 4324
==4325== 
==4325== Invalid read of size 8
==4325==    at 0x10977C: readFrequencies(char const*) (readFreq.cpp:38)
==4325==    by 0x109357: main (testFreq.cpp:10)
==4325==  Address 0x5bf4938 is 312 bytes inside an unallocated block of size 3,635,168 in arena "client"
==4325== 
==4325== Invalid write of size 8
==4325==    at 0x109783: readFrequencies(char const*) (readFreq.cpp:38)
==4325==    by 0x109357: main (testFreq.cpp:10)
==4325==  Address 0x5bf4938 is 312 bytes inside an unallocated block of size 3,635,168 in arena "client"
==4325== 
==4325== Invalid read of size 8
==4325==    at 0x1093A8: main (testFreq.cpp:13)
==4325==  Address 0x5bf47b8 is 0 bytes after a block of size 8 alloc'd
==4325==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4325==    by 0x1096FC: readFrequencies(char const*) (readFreq.cpp:36)
==4325==    by 0x109357: main (testFreq.cpp:10)
==4325== 
==4325== Invalid read of size 8
==4325==    at 0x1093E9: main (testFreq.cpp:17)
==4325==  Address 0x5bf47d8 is 24 bytes after a block of size 16 in arena "client"
==4325== 
==4325== Conditional jump or move depends on uninitialised value(s)
==4325==    at 0x1093AE: main (testFreq.cpp:13)
==4325== 
==4325== Use of uninitialised value of size 8
==4325==    at 0x4F4370E: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==4325==    by 0x4F44164: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==4325==    by 0x4F503E4: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==4325==    by 0x1093F6: main (testFreq.cpp:17)
==4325== 
==4325== Conditional jump or move depends on uninitialised value(s)
==4325==    at 0x4F4371B: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==4325==    by 0x4F44164: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==4325==    by 0x4F503E4: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==4325==    by 0x1093F6: main (testFreq.cpp:17)
==4325== 
==4325== Mismatched free() / delete / delete []
==4325==    at 0x4C3173B: operator delete[](void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4325==    by 0x10942A: main (testFreq.cpp:19)
==4325==  Address 0x5bf47b0 is 0 bytes inside a block of size 8 alloc'd
==4325==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4325==    by 0x1096FC: readFrequencies(char const*) (readFreq.cpp:36)
==4325==    by 0x109357: main (testFreq.cpp:10)
==4325== 
==4325== 
==4325== HEAP SUMMARY:
==4325==     in use at exit: 0 bytes in 0 blocks
==4325==   total heap usage: 6 allocs, 6 frees, 562,792 bytes allocated
==4325== 
==4325== All heap blocks were freed -- no leaks are possible
==4325== 
==4325== For counts of detected and suppressed errors, rerun with: -v
==4325== Use --track-origins=yes to see where uninitialised values come from
==4325== ERROR SUMMARY: 955002 errors from 8 contexts (suppressed: 0 from 0)

Overall Grade: F
