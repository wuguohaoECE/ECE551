Grading at 10/01/2019:14:15:43.939375
For commit ID 940cfee7e11c2f86ca459ad98b0e326b555a3dc3
Grading at Tue Oct  1 10:15:37 EDT 2019
****************testing step1.c*********************
Attempting to compile step1.c -> step1
Looking for int main
Found on line 27, column 1 
Checking that main actually returns a value
Looks like your main doesn't return a value [IT SHOULD]
Looking for int seq1(int)
Found on line 11, column 1 
Looking for void printSeq1Range(int,int) 
Found on line 15, column 1 
Removing your main and adding ours
Attempting to compile removedmain.c -> removedmain
 - seq1(-93) was Correct
 - seq1(-5) was Correct
 - seq1(-1) was Correct
 - seq1(0) was Correct
 - seq1(1) was Correct
 - seq1(3) was Correct
 - seq1(12) was Correct
 - seq1(96) was Correct
#################################################
Removing your main() and replacing it with our own to test step1(C)
Attempting to compile removedmain.c -> removedmain
printSeq1Range(-99, -100) was Correct
printSeq1Range(-99, -99) was Correct
printSeq1Range(-99, 1) was Correct
printSeq1Range(-99, 6) was Correct
printSeq1Range(-99, 0) was Correct
printSeq1Range(-99, 100) was Correct
printSeq1Range(-3, -100) was Correct
printSeq1Range(-3, -99) was Correct
printSeq1Range(-3, 1) was Correct
printSeq1Range(-3, 6) was Correct
printSeq1Range(-3, 0) was Correct
printSeq1Range(-3, 100) was Correct
printSeq1Range(-1, -100) was Correct
printSeq1Range(-1, -99) was Correct
printSeq1Range(-1, 1) was Correct
printSeq1Range(-1, 6) was Correct
printSeq1Range(-1, 0) was Correct
printSeq1Range(-1, 100) was Correct
printSeq1Range(0, -100) was Correct
printSeq1Range(0, -99) was Correct
printSeq1Range(0, 1) was Correct
printSeq1Range(0, 6) was Correct
printSeq1Range(0, 0) was Correct
printSeq1Range(0, 100) was Correct
printSeq1Range(1, -100) was Correct
printSeq1Range(1, -99) was Correct
printSeq1Range(1, 1) was Correct
printSeq1Range(1, 6) was Correct
printSeq1Range(1, 0) was Correct
printSeq1Range(1, 100) was Correct
printSeq1Range(4, -100) was Correct
printSeq1Range(4, -99) was Correct
printSeq1Range(4, 1) was Correct
printSeq1Range(4, 6) was Correct
printSeq1Range(4, 0) was Correct
printSeq1Range(4, 100) was Correct
printSeq1Range(5, -100) was Correct
printSeq1Range(5, -99) was Correct
printSeq1Range(5, 1) was Correct
printSeq1Range(5, 6) was Correct
printSeq1Range(5, 0) was Correct
printSeq1Range(5, 100) was Correct
printSeq1Range(9, -100) was Correct
printSeq1Range(9, -99) was Correct
printSeq1Range(9, 1) was Correct
printSeq1Range(9, 6) was Correct
printSeq1Range(9, 0) was Correct
printSeq1Range(9, 100) was Correct
printSeq1Range(99, -100) was Correct
printSeq1Range(99, -99) was Correct
printSeq1Range(99, 1) was Correct
printSeq1Range(99, 6) was Correct
printSeq1Range(99, 0) was Correct
printSeq1Range(99, 100) was Correct
#################################################
Removing your seq1/printSeq1Range and testing your main...
Attempting to compile rmfns.c -> rmfns
You have 10 test cases for seq1
You have 5 test cases for printSeq1Range
Step 1 Summary:
   Part A (seq1):                    8 / 8 [ 8 pts]
   Part B+D (main):                  8 / 8 [ 8 pts]
   Part C (printSeq1Range):        54 / 54 [10 pts]
   Code compiled without warnings:     Yes [ 2 pts]
   Main properly returned an int:      No  [ 0 pts] 
=================================================
Step 1 Total:                              28/30     
=================================================
****************testing step2.c*********************
Attempting to compile step2.c -> step2
Looking for int main
Found on line 49, column 1 
Checking that main actually returns a value
Looks like your main doesn't return a value [IT SHOULD]
Looking for int seq2(int)
Found on line 13, column 1 
Looking for int int sumSeq2(int,int) 
Found on line 39, column 1 
#################################################
Removing your main() and replacing it with our own to test seq (Part A)
Attempting to compile removedmain.c -> removedmain
seq2(-98) was Correct
seq2(-6) was Correct
seq2(-1) was Correct
seq2(-3) was Correct
seq2(0) was Correct
seq2(1) was Correct
seq2(6) was Correct
seq2(22) was Correct
seq2(102) was Correct
seq2(104) was Correct
#################################################
Removing your seq2/sumSeq2 and testing your main (B+D)...
Attempting to compile rmfns.c -> rmfns
For seq2, you have 25 test cases (10 negative, 14 positive)
For sumSeq, ou have 3 total test cases (1/2)
  o 1 tested for an empty range 
  o 0 tested for a range of size 1 
  o 2 tested for a larger range 
#################################################
Removing your main() and replacing it with our own for sumSeq2(Part C)
Attempting to compile removedmain.c -> removedmain
sumSeq2(-100, -99) was Correct
sumSeq2(-100, -90) was Correct
sumSeq2(-3, 4) was Correct
sumSeq2(-1, 5) was Correct
sumSeq2(-3, 99) was Correct
sumSeq2(-100, 99) was Correct
sumSeq2(0, 0) was Correct
sumSeq2(2, 3) was Correct
sumSeq2(-12, 107) was Correct
sumSeq2(100, 99) was Correct
Step 2 Summary:
   Part A (seq2):                10 / 10 [10 pts]
   Part B+D (main):               8 / 10 [ 8 pts]
   Part C (sumSeq):              10 / 10 [10 pts]
Code compiled without warnings: NO       [ 0 pts]
=================================================
Step 2 Total:                              28/33     
=================================================
****************testing step3.c*********************
Attempting to compile step3.c -> step3
Looking for int main
Found on line 29, column 1 
Checking that main actually returns a value
Looking for int seq3(int,int)
Found on line 11, column 1 
Looking for int int countEvenInSeq3Range(int,int,int,int) 
not found
The above problems will likely cause issues in the rest of this step
#################################################
Removing your main() and replacing it with our own to test step3(A)
Attempting to compile removedmain.c -> removedmain
seq3(-99, -99) was Correct
seq3(-99, -5) was Correct
seq3(-99, 0) was Correct
seq3(-99, 5) was Correct
seq3(-99, 99) was Correct
seq3(-3, -99) was Correct
seq3(-3, -5) was Correct
seq3(-3, 0) was Correct
seq3(-3, 5) was Correct
seq3(-3, 99) was Correct
seq3(-1, -99) was Correct
seq3(-1, -5) was Correct
seq3(-1, 0) was Correct
seq3(-1, 5) was Correct
seq3(-1, 99) was Correct
seq3(0, -99) was Correct
seq3(0, -5) was Correct
seq3(0, 0) was Correct
seq3(0, 5) was Correct
seq3(0, 99) was Correct
seq3(1, -99) was Correct
seq3(1, -5) was Correct
seq3(1, 0) was Correct
seq3(1, 5) was Correct
seq3(1, 99) was Correct
seq3(4, -99) was Correct
seq3(4, -5) was Correct
seq3(4, 0) was Correct
seq3(4, 5) was Correct
seq3(4, 99) was Correct
seq3(5, -99) was Correct
seq3(5, -5) was Correct
seq3(5, 0) was Correct
seq3(5, 5) was Correct
seq3(5, 99) was Correct
seq3(9, -99) was Correct
seq3(9, -5) was Correct
seq3(9, 0) was Correct
seq3(9, 5) was Correct
seq3(9, 99) was Correct
seq3(99, -99) was Correct
seq3(99, -5) was Correct
seq3(99, 0) was Correct
seq3(99, 5) was Correct
seq3(99, 99) was Correct
#################################################
Removing your seq3/countEvenInSeq3Range and testing your main (B+D)...
Attempting to compile rmfn.c -> rmfn
rmfn.c: In function ‘main’:
rmfn.c:66:64: error: too many arguments to function ‘countEvenInSeq3Range’
   printf("countEvenInSeq3Range(%d, %d, %d, %d) = %d\n",0,2,0,3,countEvenInSeq3Range(0,2,0,3,seq3));
                                                                ^~~~~~~~~~~~~~~~~~~~
rmfn.c:33:5: note: declared here
 int countEvenInSeq3Range(int xLow, int xHi, int yLow, int yHi) {
     ^~~~~~~~~~~~~~~~~~~~
rmfn.c:67:65: error: too many arguments to function ‘countEvenInSeq3Range’
   printf("countEvenInSeq3Range(%d, %d, %d, %d) = %d\n",-5,6,0,1,countEvenInSeq3Range(-5,6,0,1,seq3));
                                                                 ^~~~~~~~~~~~~~~~~~~~
rmfn.c:33:5: note: declared here
 int countEvenInSeq3Range(int xLow, int xHi, int yLow, int yHi) {
     ^~~~~~~~~~~~~~~~~~~~
The code did not compile with -pedantic -Wall -Werror -std=gnu99!
Trying with just -std=gnu99
rmfn.c: In function ‘main’:
rmfn.c:66:64: error: too many arguments to function ‘countEvenInSeq3Range’
   printf("countEvenInSeq3Range(%d, %d, %d, %d) = %d\n",0,2,0,3,countEvenInSeq3Range(0,2,0,3,seq3));
                                                                ^~~~~~~~~~~~~~~~~~~~
rmfn.c:33:5: note: declared here
 int countEvenInSeq3Range(int xLow, int xHi, int yLow, int yHi) {
     ^~~~~~~~~~~~~~~~~~~~
rmfn.c:67:65: error: too many arguments to function ‘countEvenInSeq3Range’
   printf("countEvenInSeq3Range(%d, %d, %d, %d) = %d\n",-5,6,0,1,countEvenInSeq3Range(-5,6,0,1,seq3));
                                                                 ^~~~~~~~~~~~~~~~~~~~
rmfn.c:33:5: note: declared here
 int countEvenInSeq3Range(int xLow, int xHi, int yLow, int yHi) {
     ^~~~~~~~~~~~~~~~~~~~
Your code still doesn't seem to compile, even without warnings!
Could not replace your main function to test further
#################################################
Removing your main() and replacing it with our own to test step3(C)
Attempting to compile removedmain.c -> removedmain
removedmain.c: In function ‘main’:
removedmain.c:36:79: error: too few arguments to function ‘countEvenInSeq3Range’
   printf("countEvenInSeq3Range(%d, %d, %d, %d) = %d\n", xLow, xHi, yLow, yHi, countEvenInSeq3Range(xLow, xHi, yLow, yHi));
                                                                               ^~~~~~~~~~~~~~~~~~~~
removedmain.c:17:5: note: declared here
 int countEvenInSeq3Range(int xLow,int xHi,int yLow,int yHi,int (*seq3)(int,int)){
     ^~~~~~~~~~~~~~~~~~~~
The code did not compile with -pedantic -Wall -Werror -std=gnu99!
Trying with just -std=gnu99
removedmain.c: In function ‘main’:
removedmain.c:36:79: error: too few arguments to function ‘countEvenInSeq3Range’
   printf("countEvenInSeq3Range(%d, %d, %d, %d) = %d\n", xLow, xHi, yLow, yHi, countEvenInSeq3Range(xLow, xHi, yLow, yHi));
                                                                               ^~~~~~~~~~~~~~~~~~~~
removedmain.c:17:5: note: declared here
 int countEvenInSeq3Range(int xLow,int xHi,int yLow,int yHi,int (*seq3)(int,int)){
     ^~~~~~~~~~~~~~~~~~~~
Your code still doesn't seem to compile, even without warnings!
Could not replace your main function to test further
Step 3 Summary:
   Part A (seq3):                45 / 45 [10 pts]
   Part B+D (main):               0 / 10 [ 0 pts]
   Part C (sumSeq):              could not be tested
Code compiled without warnings: YES      [ 3 pts]
=================================================
Step 3 Total:                              13/37     
=================================================
-----------------------------------
Functionality:  69 points / 100
------------------------------------
Code quality:
 - Format:      3 / 3
 - Comments:    1 / 3
 - Abstraction: 2 / 2
 - Other:       1 / 2
 Notes from your Instructor:
Good formatting, just allow for more space around operators. You should comment your code. Remember to use main(void) when main is not taking parameters, and returning from main. How did you come up with such a complex algorithm for seq2?
------------------------------
Total quality:   7 / 10
------------------------------
Overall grade = functionality *0.9 + quality

Overall Grade: 69.1
