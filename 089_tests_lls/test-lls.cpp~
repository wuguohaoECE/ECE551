#include "il.h"
#include <cstdlib>
#include <cstdio>
#include <assert.h>
void testList(void) {
  IntList l1;
  assert( (l1.getSize() == 0) &&
	  (l1.size == 0) &&
	  (l1.head == NULL) &&
	  (l1.tail == NULL) );
  // 2
  l1.addBack(2);
  assert( (l1.head->data == l1[0]) &&
	  (l1.head == l1.tail) &&
	  (l1.getSize() == 1) &&
	  (l1.size == 1) &&
	  (l1.head != NULL) &&
	  (l1.find(2) == 0) );
  // 2 3
  l1.addBack(3);
  assert( (l1.head->data == l1[0]) &
	  (l1.head->next->data == l1[1]) &
	  (l1.tail == l1.head->next) &&
	  (l1.getSize() == 2) &&
	  (l1.find(2) == 0) &&
	  (l1.find(3) == 1) );
  // 4 2 3
  l1.addFront(4);
  assert( (l1.head->data == 4) &&
	  (l1.head->next->data == 2) &&
	  (l1.head->next->next->data == 3) &&
	  (l1.getSize() == 3) &&
	  (l1.find(4) == 0) &&
	  (l1[0] == 4) &&
	  (l1[2] == 3) &&
	  (l1.head == l1.tail->prev->prev) );
  IntList l2;
  l2 = l1;
  assert( (l2.head->data == 4) &&
	  (l2.head->next->data == 2) &&
	  (l2.head->next->next->data == 3) &&
	  (l2.getSize() == 3) &&
	  (l2.find(4) == 0) &&
	  (l2[0] == 4) &&
	  (l2[2] == 3) &&
	  (l2.head == l2.tail->prev->prev) );
  IntList l3(l2);
  assert( (l3.head->data == 4) &&
	  (l3.head->next->data == 2) &&
	  (l3.head->next->next->data == 3) &&
	  (l3.getSize() == 3) &&
	  (l3.find(4) == 0) &&
	  (l3[0] == 4) &&
	  (l3[2] == 3) &&
	  (l3.head == l3.tail->prev->prev) );  
  // 4 2 3 fail to remove 5
  assert( l1.remove(5) == false );
  // 4 3 successfully remove 2
  bool x = l1.remove(2);
  assert( (x == true) &&
	  (l1.size == 2) &&
	  (l1.getSize() == 2) &&
	  (l1[0] == 4) &&
	  (l1[1] == 3) &&
	  (l1.head->data == 4) &&
	  (l1.tail->data == 3) &&
	  (l1.head->next == l1.tail) &&
	  (l1.find(2) == -1) &&
	  (l1.head->next->next == NULL));
  l1.remove(4);
  // 3
  assert( (l1.size == 1) &&
	  (l1.getSize() == 1) &&
	  (l1.head == l1.tail) &&
	  (l1.head->data == l1.tail->data) &&
	  (l1.head->next == NULL) &&
	  (l1.tail->prev == NULL) );
  l1.remove(3);
  assert( (l1.size == 0) &&
	  (l1.head == NULL) &&
	  (l1.head == l1.tail));
  
}

int main(void) {
  testList();
  return EXIT_SUCCESS;
}
